#1122 produces a sum of 3 (1 + 2) because the first digit (1) matches the second digit and the third digit (2) matches the fourth digit.
#1111 produces 4 because each digit (all 1) matches the next.
#1234 produces 0 because no digit matches the next.
#91212129 produces 9 because the only digit that matches the next one is the last digit, 9.

#test1 = 1122
#test2 = 1111
#test3 = 1234
#test4 = 91212129
test_final

#def real_value(number)
#  res = 0
#  arr = number.to_s.split('')
#  arr.each_with_index do  |n, idx|
#    res += n.to_i if arr[idx+1] == arr[idx]
#  end
#  res += arr[0].to_i if arr[0] == arr[-1]
#  res
#end

#result1 = real_value(test1)
#p result1
#result2 = real_value(test2)
#p result2
#result3 = real_value(test3)
#p result3
#result4 = real_value(test4)
#p result4

#test_final = real_value(test_final)
#p test_final


#1212 produces 6: the list contains 4 items, and all four digits match the digit 2 items ahead.
#1221 produces 0, because every comparison is between a 1 and a 2.
#123425 produces 4, because both 2s match each other, but no other digit has a match.
#123123 produces 12.
#12131415 produces 4.

test1 = 1212
test2 = 1221
test3 = 123425
test4 = 123123
test5 = 12131415
# test_final

def real_value(number)
  len = number.to_s.length
  tms = len/2
  res = 0
  arr = number.to_s.split('')
  arr.each_with_index do  |n, idx|
    if arr[idx+tms].nil?
      # 2 + 2
      #p "entro en if: #{arr[idx+1-len]} - #{arr[idx]}"

      res += n.to_i if arr[idx+tms-len] == arr[idx]
    else
      #p "no entro en if: #{arr[idx+1-len]} - #{arr[idx]}"
      res += n.to_i if arr[idx+tms] == arr[idx]
    end
  end
  # res += arr[0].to_i if arr[0] == arr[-1]
  res
end

result1 = real_value(test1)
p result1
result2 = real_value(test2)
p result2
result3 = real_value(test3)
p result3
result4 = real_value(test4)
p result4
result5 = real_value(test5)
p result5

test_final = real_value(test_final)
p test_final